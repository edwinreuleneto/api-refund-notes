generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Files
model Files {
  id        String @id @default(uuid())
  name      String
  extension String
  baseUrl   String
  folder    String
  file      String
  url       String @unique
  size      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  TaxCoupon TaxCoupon[]
  FilesOcr  FilesOcr[]

  @@index([id, createdAt(sort: Desc)])
}

model FilesOcr {
  id     String @id @default(uuid())
  fileId String
  file   Files  @relation(fields: [fileId], references: [id], onDelete: Cascade)

  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("files_ocr")
}

// Tax Coupon
model TaxCoupon {
  id     String          @id @default(uuid())
  status TaxCouponStatus @default(UPLOAD)
  fileId String
  file   Files           @relation(fields: [fileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tax_coupons")
}

enum TaxCouponStatus {
  UPLOAD
  TEXTRACT_INITIATED
  TEXTRACT_COMPLETED
  AI_INITIATED
  AI_COMPLETED
  COMPLETED
  FAILED
}
